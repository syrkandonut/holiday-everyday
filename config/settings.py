"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from urllib.parse import urljoin

from django.core.files.storage import FileSystemStorage
from dotenv import load_dotenv

from .ckeditor import (  # noqa
    CKEDITOR_5_CONFIGS,
    CKEDITOR_5_FILE_UPLOAD_PERMISSION,
    CKEDITOR_5_UPLOAD_FILE_TYPES,
)

load_dotenv()

SERVER_URI = os.getenv("SERVER_URI")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = eval(os.getenv("DEBUG"))  # type: ignore
DEBUG_PROPAGATE_EXCEPTIONS = eval(os.getenv("DEBUG_PROPAGATE_EXCEPTIONS"))  # type: ignore

if DEBUG_PROPAGATE_EXCEPTIONS:
    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False,
        "handlers": {
            "file": {
                "level": "ERROR",
                "class": "logging.FileHandler",
                "filename": "logs/django_errors.log",  # Куда писать логи
            },
        },
        "loggers": {
            "django": {
                "handlers": ["file"],  # Использует обработчик 'file'
                "level": "ERROR",  # Логирует только ERROR и выше
                "propagate": True,  # Передаёт ошибки родительским логгерам
            },
        },
    }

ALLOWED_HOSTS: list[str] = ["*"]

USE_CORS = True
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_cleanup.apps.CleanupConfig",
    "adminsortable",
    "django_ckeditor_5",
    "corsheaders",
    "rest_framework",
    "agency",
]

REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": (
        "djangorestframework_camel_case.render.CamelCaseJSONRenderer",
        "djangorestframework_camel_case.render.CamelCaseBrowsableAPIRenderer",
    ),
    "DEFAULT_PARSER_CLASSES": (
        "djangorestframework_camel_case.parser.CamelCaseFormParser",
        "djangorestframework_camel_case.parser.CamelCaseMultiPartParser",
        "djangorestframework_camel_case.parser.CamelCaseJSONParser",
    ),
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["static"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.template.context_processors.static",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8000",
    "http://localhost:8001",
    "https://u2994719.isp.regruhosting.ru/",
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

STORAGE_DB_PATH = "storage/database"

os.makedirs(BASE_DIR / STORAGE_DB_PATH, exist_ok=True)

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / STORAGE_DB_PATH / "db.sqlite3",
    }
}

FIXTURE_DIRS = ["agency.fixtures"]

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": (
            "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
        ),
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "ru"

TIME_ZONE = "Europe/Moscow"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "/static/"

IMAGE_URL = "/image/"
STORAGE_IMAGE_PATH = "storage/images"

FRONTEND_STATIC = {
    "favicon.svg": "static/favicon.svg",
    "/assets/": "static/assets",
    "/images/": "static/images",
    "/video/": "static/video",
}

PACKAGE_STATIC = {
    "/static/adminsortable/": "static/packages/adminsortable",
    "/static/rest_framework/": "static/packages/rest_framework",
    "/static/django_ckeditor_5/": "static/packages/django_ckeditor_5",
}

MEDIA_STATIC = {
    IMAGE_URL: STORAGE_IMAGE_PATH,
}

# CKEditor Settings
# https://ckeditor.com/docs/ckeditor5/latest/index.html
DJANGO_CKEDITOR_5_PATH = "django_ckeditor_5"
STORAGE_CKEDITOR_IMAGE_PATH = f"{STORAGE_IMAGE_PATH}/{DJANGO_CKEDITOR_5_PATH}"
IMAGE_CKEDITOR_URL = f"/{STORAGE_IMAGE_PATH}/{DJANGO_CKEDITOR_5_PATH}/"

MEDIA_CKEDITOR_STATIC = {
    IMAGE_CKEDITOR_URL: STORAGE_CKEDITOR_IMAGE_PATH,
}


class CKEditorStorage(FileSystemStorage):
    """Custom storage for django_ckeditor_5 images."""

    location = os.path.join(STORAGE_IMAGE_PATH, DJANGO_CKEDITOR_5_PATH)
    base_url = urljoin(f"/{STORAGE_IMAGE_PATH}/", f"{DJANGO_CKEDITOR_5_PATH}/")


CKEDITOR_5_FILE_STORAGE = "config.settings.CKEditorStorage"


# All static config
STATIC_CONFIG = {
    **FRONTEND_STATIC,
    **PACKAGE_STATIC,
    **MEDIA_STATIC,
    **MEDIA_CKEDITOR_STATIC,
}

EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = os.getenv("EMAIL_PORT")

EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")

EMAIL_USE_TLS = False
EMAIL_USE_SSL = True

# Image resolution for the compression to webp
IMG_BIG_SIZE = (4096, 2048)
IMG_SMALL_SIZE = (256, 144)

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
